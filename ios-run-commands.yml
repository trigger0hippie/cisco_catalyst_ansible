# - name: LOCALHOST FACTS
#   hosts: localhost
#   gather_facts: yes

- name: CISCO IOS CATALYST RUN COMMANDS
  hosts: all
  gather_facts: True
  ignore_unreachable: True
  serial: 1
  # vars:
  #   # Get current date from localhost
  #   current_datetime: "{{ hostvars['localhost'].ansible_date_time.date }}"0
  tasks: 
    - name: Gather all facts
      cisco.ios.ios_facts:
        gather_subset: all
      register: facts
      tags: facts
      ignore_errors: yes
    - name: Display facts
      debug: 
         var: facts
      tags: facts
      ignore_errors: yes
    - name: Run commands on remote devices
      cisco.ios.ios_command:
        commands: 
          - show pnp version | i UDI
      register: command_output_ver
      tags: show_command
      ignore_errors: yes
    - name: Run commands on remote devices
      cisco.ios.ios_command:
        commands: 
          - show crypto pki certificates | i hex
          #- show snmp chassis
        #wait_for: result[0] contains IOS
      register: command_output_hex
      tags: show_command
      ignore_errors: yes
    - name: Transform hex output
      set_fact:
        command_output_hex_transformed: "{{ command_output_hex.stdout_lines | flatten | map('regex_replace', '^\\s*[^:]*:\\s*', '') | list }}"
      tags: show_command
    - name: Transform ver output
      set_fact:
        command_output_ver_transformed: "{{ command_output_ver_transformed | default([]) + [item | regex_replace('.*SN:(.*)$', '\\1')] }}"
      loop: "{{ command_output_ver.stdout_lines.0 }}"
      when: "'SN' in item"
      tags: show_command
    # - name: Display output
    #   debug:
    #     msg: "{{ command_output_ver }}"
    #   tags: show_command
    - name: Save command output to file
      lineinfile: 
        #state: present
        #content: "{{ command_output.stdout_lines | to_nice_yaml  }}"
        line: "{{ inventory_hostname }}, {{ ansible_net_model }}, {{ command_output_ver_transformed.0 }}, {{ command_output_ver_transformed.1 }}, {{ command_output_hex_transformed.1 }}"
        path: /awx-output-folder/commands_output.txt
        create: true            
      tags: show_command
#    - name: Save facts to file
#      copy: 
#        content: "{{ ansible_facts | to_nice_yaml }}"
#        dest: /awx-output-folder/{{ inventory_hostname }}-facts.txt
    - name: Config backup 
      ios_config:
        backup: True
        backup_options:
          dir_path: /awx-output-folder/
      tags: config_backup
    - name: Configure top level configuration
      cisco.ios.ios_config:
        lines: aaa authorization config-commands
        save_when: modified
      tags: configure
